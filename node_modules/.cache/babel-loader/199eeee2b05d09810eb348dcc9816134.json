{"ast":null,"code":"import _slicedToArray from\"C:/Users/wrade/Desktop/shopcart/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{library}from'@fortawesome/fontawesome-svg-core';import{faShoppingBag,faTimes}from'@fortawesome/free-solid-svg-icons';import Cart from'./Cart';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CartNav=function CartNav(_ref){var cart=_ref.cart,onUpdateCartQty=_ref.onUpdateCartQty,onRemoveFromCart=_ref.onRemoveFromCart,onEmptyCart=_ref.onEmptyCart;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isCartVisible=_useState2[0],setCartVisible=_useState2[1];var renderOpenButton=function renderOpenButton(){return/*#__PURE__*/_jsxs(\"button\",{className:\"nav__cart-btn--open\",children:[/*#__PURE__*/_jsx(FontAwesomeIcon,{size:\"2x\",icon:faShoppingBag,color:\"#262525\"}),cart!==null?/*#__PURE__*/_jsx(\"span\",{children:cart.total_items}):'']});};var renderCloseButton=function renderCloseButton(){return/*#__PURE__*/_jsx(\"button\",{className:\"nav__cart-btn--close\",children:/*#__PURE__*/_jsx(FontAwesomeIcon,{size:\"1x\",icon:faTimes,color:\"white\"})});};return/*#__PURE__*/_jsxs(\"div\",{className:\"nav\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"nav__cart\",onClick:function onClick(){return setCartVisible(!isCartVisible);},children:!isCartVisible?renderOpenButton():renderCloseButton()}),isCartVisible&&/*#__PURE__*/_jsx(Cart,{cart:cart,onUpdateCartQty:onUpdateCartQty,onRemoveFromCart:onRemoveFromCart,onEmptyCart:onEmptyCart})]});};export default CartNav;","map":{"version":3,"sources":["C:/Users/wrade/Desktop/shopcart/frontend/src/Components/CartNav.js"],"names":["React","useState","FontAwesomeIcon","library","faShoppingBag","faTimes","Cart","CartNav","cart","onUpdateCartQty","onRemoveFromCart","onEmptyCart","isCartVisible","setCartVisible","renderOpenButton","total_items","renderCloseButton"],"mappings":"8HAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,eAAT,KAAgC,gCAAhC,CACA,OAASC,OAAT,KAAwB,mCAAxB,CACA,OAASC,aAAT,CAAwBC,OAAxB,KAAuC,mCAAvC,CAEA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,C,wFAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,MAA8D,IAA3DC,CAAAA,IAA2D,MAA3DA,IAA2D,CAArDC,eAAqD,MAArDA,eAAqD,CAApCC,gBAAoC,MAApCA,gBAAoC,CAAlBC,WAAkB,MAAlBA,WAAkB,CAC1E,cAAwCV,QAAQ,CAAC,KAAD,CAAhD,wCAAOW,aAAP,eAAsBC,cAAtB,eAEA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,sBAEvB,gBAAQ,SAAS,CAAC,qBAAlB,wBACE,KAAC,eAAD,EAAiB,IAAI,CAAC,IAAtB,CAA2B,IAAI,CAAEV,aAAjC,CAAgD,KAAK,CAAC,SAAtD,EADF,CAEGI,IAAI,GAAK,IAAT,cAAgB,sBAAOA,IAAI,CAACO,WAAZ,EAAhB,CAAkD,EAFrD,GAFuB,EAAzB,CAQA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,sBACxB,eAAQ,SAAS,CAAC,sBAAlB,uBACE,KAAC,eAAD,EAAiB,IAAI,CAAC,IAAtB,CAA2B,IAAI,CAAEX,OAAjC,CAA0C,KAAK,CAAC,OAAhD,EADF,EADwB,EAA1B,CAMA,mBACE,aAAK,SAAS,CAAC,KAAf,wBACA,YAAK,SAAS,CAAC,WAAf,CAA2B,OAAO,CAAE,yBAAMQ,CAAAA,cAAc,CAAC,CAACD,aAAF,CAApB,EAApC,UACM,CAACA,aAAD,CAAiBE,gBAAgB,EAAjC,CAAsCE,iBAAiB,EAD7D,EADA,CAIIJ,aAAa,eACb,KAAC,IAAD,EACE,IAAI,CAAEJ,IADR,CAEE,eAAe,CAAEC,eAFnB,CAGE,gBAAgB,CAAEC,gBAHpB,CAIE,WAAW,CAAEC,WAJf,EALJ,GADF,CAgBD,CAjCH,CAmCE,cAAeJ,CAAAA,OAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { faShoppingBag, faTimes } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport Cart from './Cart'\r\n\r\nconst CartNav = ({ cart, onUpdateCartQty, onRemoveFromCart, onEmptyCart }) => {\r\n    const [isCartVisible, setCartVisible] = useState(false);\r\n  \r\n    const renderOpenButton = () => (\r\n      \r\n      <button className=\"nav__cart-btn--open\">\r\n        <FontAwesomeIcon size=\"2x\" icon={faShoppingBag} color=\"#262525\"/>\r\n        {cart !== null ? <span>{cart.total_items}</span> : ''}\r\n      </button>\r\n    );\r\n  \r\n    const renderCloseButton = () => (\r\n      <button className=\"nav__cart-btn--close\">\r\n        <FontAwesomeIcon size=\"1x\" icon={faTimes} color=\"white\"/>\r\n      </button>\r\n    );\r\n  \r\n    return (\r\n      <div className=\"nav\">\r\n      <div className=\"nav__cart\" onClick={() => setCartVisible(!isCartVisible)}>\r\n          { !isCartVisible ? renderOpenButton() : renderCloseButton() }\r\n      </div>\r\n        { isCartVisible &&\r\n          <Cart\r\n            cart={cart}\r\n            onUpdateCartQty={onUpdateCartQty}\r\n            onRemoveFromCart={onRemoveFromCart}\r\n            onEmptyCart={onEmptyCart}\r\n          />\r\n        }  \r\n      </div>\r\n     \r\n    );\r\n  };\r\n  \r\n  export default CartNav;"]},"metadata":{},"sourceType":"module"}