{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wrade\\\\Desktop\\\\shopcart\\\\frontend\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport { commerce } from './lib/commerce';\nimport './styles/scss/styles.scss';\nimport Hero from './Components/Hero';\nimport Product from './Components/Product'; // import Cart from './Components/Cart'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      Product: [],\n      cart: {}\n    };\n  }\n\n  componentDidMount() {\n    this.fetchProducts();\n  }\n\n  fetchCart() {\n    commerce.cart.retrieve().then(cart => {\n      this.setState({\n        cart\n      });\n    }).catch(error => {\n      console.error('There was an error fetching the cart', error);\n    });\n  }\n\n  fetchProducts() {\n    commerce.products.list().then(products => {\n      this.setState({\n        products: products.data\n      });\n    }).catch(error => {\n      console.log('There was an error fetching the products', error);\n    });\n  }\n\n  render() {\n    const {\n      products\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Hero, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Product, {\n      products: products,\n      onAddToCart: this.handleAddToCart,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/wrade/Desktop/shopcart/frontend/src/App.js"],"names":["React","Component","commerce","Hero","Product","App","constructor","props","state","cart","componentDidMount","fetchProducts","fetchCart","retrieve","then","setState","catch","error","console","products","list","data","log","render","handleAddToCart"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,gBAAzB;AAEA,OAAO,2BAAP;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB,C,CACA;;AAEA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAC1BK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXJ,MAAAA,OAAO,EAAE,EADE;AAEXK,MAAAA,IAAI,EAAE;AAFK,KAAb;AAMD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,aAAL;AACD;;AAEDC,EAAAA,SAAS,GAAG;AACVV,IAAAA,QAAQ,CAACO,IAAT,CAAcI,QAAd,GAAyBC,IAAzB,CAA+BL,IAAD,IAAU;AACtC,WAAKM,QAAL,CAAc;AAAEN,QAAAA;AAAF,OAAd;AACD,KAFD,EAEGO,KAFH,CAEUC,KAAD,IAAW;AAClBC,MAAAA,OAAO,CAACD,KAAR,CAAc,sCAAd,EAAsDA,KAAtD;AACD,KAJD;AAKD;;AAEDN,EAAAA,aAAa,GAAG;AACdT,IAAAA,QAAQ,CAACiB,QAAT,CAAkBC,IAAlB,GAAyBN,IAAzB,CAA+BK,QAAD,IAAc;AAC1C,WAAKJ,QAAL,CAAc;AAAEI,QAAAA,QAAQ,EAAEA,QAAQ,CAACE;AAArB,OAAd;AACD,KAFD,EAEGL,KAFH,CAEUC,KAAD,IAAW;AAClBC,MAAAA,OAAO,CAACI,GAAR,CAAY,0CAAZ,EAAwDL,KAAxD;AACD,KAJD;AAKD;;AAEDM,EAAAA,MAAM,GAAI;AACR,UAAM;AAAEJ,MAAAA;AAAF,QAAe,KAAKX,KAA1B;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAGE,oBAAC,OAAD;AACE,MAAA,QAAQ,EAAEW,QADZ;AAEE,MAAA,WAAW,EAAE,KAAKK,eAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF;AAaD;;AA/CyB;;AAkD5B,eAAenB,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport { commerce } from './lib/commerce';\n\nimport './styles/scss/styles.scss'\nimport Hero from './Components/Hero';\nimport Product from './Components/Product';\n// import Cart from './Components/Cart'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      Product: [],\n      cart: {},\n\n    };\n    \n  }\n\n  componentDidMount() {\n    this.fetchProducts();\n  }\n\n  fetchCart() {\n    commerce.cart.retrieve().then((cart) => {\n      this.setState({ cart });\n    }).catch((error) => {\n      console.error('There was an error fetching the cart', error);\n    })\n  }\n\n  fetchProducts() {\n    commerce.products.list().then((products) => {\n      this.setState({ products: products.data })\n    }).catch((error) => {\n      console.log('There was an error fetching the products', error);\n    })\n  }\n\n  render () {\n    const { products } = this.state;\n    return (\n      <div className=\"app\">\n        <Hero />\n      \n        <Product \n          products={products}\n          onAddToCart={this.handleAddToCart} \n        />\n\n       \n\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}